{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorie","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorie","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"8MAEaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,aAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEQ,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAsBO,OACxCN,EAAc,MAOd,SAEI,uBACAO,KAAK,OACLC,MAAUT,EACVU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+CCLfG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGEI,MAAOF,GAHT,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAXO,EAAc,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAQV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAW,0CAAhB,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,SCFLO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAEvB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAZAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACDf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAIEqB,EDnB0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAR,EAAqBa,QAErB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAqDhB,IACrD,qBAAKgB,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADGA,EAAIC,aEVnBgB,EAAe,WAExB,MAAkCzC,mBAAS,CAAC,kBAA5C,mBAAO0C,EAAP,KAAkB3C,EAAlB,KAEA,OACI,qCACI,sDACA,cAAC,EAAD,CAAaA,aAAiBA,IAC9B,uBAEA,6BAEQ2C,EAAUnB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAaA,GADJA,YAUrChB,EAAY6C,UAAY,CACpB5C,aAAe6C,IAAUC,KAAKC,Y,MC1BlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8e7e6b42.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ( { setCategorie } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        if ( inputValue.trim().length > 2) {\r\n            setCategorie( cats => [ inputValue , ...cats] );\r\n            setInputValue('');\r\n        }\r\n            \r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit = {handleSubmit}>\r\n\r\n                <input\r\n                type='text'\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n\r\n                /> \r\n            </form>\r\n\r\n    )\r\n}\r\n","\r\n\r\n    export const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=4Yq3RbJkeo6kW4j5aaMLGeRsq8IGpk0w`;\r\n        const resp   = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n        \r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title , url} ) => {\r\n\r\n    return (\r\n        <div className= \"card animate__animated animate__zoomIn \">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n// import { getGifs } from '../helpers/GetGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flipInX\">{ category }</h3>    \r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                    key = { img.id }\r\n                    { ...img }\r\n                    />\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/GetGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     getGifs( category ).then(setImages)\r\n    // }, [ category ])\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => { \r\n            setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n        })\r\n    }, [ category ])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport PropTypes from 'prop-types';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorie, setCategorie] = useState(['Miles Morales']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp by JLGM</h2>\r\n            <AddCategory setCategorie = { setCategorie }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorie.map( category => \r\n                        <GifGrid \r\n                            key =  { category } \r\n                            category = { category } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorie : PropTypes.func.isRequired\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}